/* tslint:disable */
/* eslint-disable */
/**
 * AI Babe Public API
 * Lorem ipsum
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  PostVastAIStatus,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    PostVastAIStatusFromJSON,
    PostVastAIStatusToJSON,
} from '../models/index';

export interface VastaiStatusWebhookWebhookInstanceStatusPostRequest {
    postVastAIStatus: PostVastAIStatus;
}

/**
 * 
 */
export class WebhookApi extends runtime.BaseAPI {

    /**
     * Patreon Subscription 3
     */
    async patreonSubscription3WebhookPatreonPledgeUpdatePostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/webhook/patreon/pledge/update`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Patreon Subscription 3
     */
    async patreonSubscription3WebhookPatreonPledgeUpdatePost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.patreonSubscription3WebhookPatreonPledgeUpdatePostRaw(initOverrides);
        return await response.value();
    }

    /**
     * Patreon Subscription 5
     */
    async patreonSubscription5WebhookPatreonPledgeDeletePostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/webhook/patreon/pledge/delete`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Patreon Subscription 5
     */
    async patreonSubscription5WebhookPatreonPledgeDeletePost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.patreonSubscription5WebhookPatreonPledgeDeletePostRaw(initOverrides);
        return await response.value();
    }

    /**
     * Truevo
     */
    async truevoWebhookTruevoPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/webhook/truevo`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Truevo
     */
    async truevoWebhookTruevoPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.truevoWebhookTruevoPostRaw(initOverrides);
        return await response.value();
    }

    /**
     * Vastai Status Webhook
     */
    async vastaiStatusWebhookWebhookInstanceStatusPostRaw(requestParameters: VastaiStatusWebhookWebhookInstanceStatusPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['postVastAIStatus'] == null) {
            throw new runtime.RequiredError(
                'postVastAIStatus',
                'Required parameter "postVastAIStatus" was null or undefined when calling vastaiStatusWebhookWebhookInstanceStatusPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/webhook/instance/status`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PostVastAIStatusToJSON(requestParameters['postVastAIStatus']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Vastai Status Webhook
     */
    async vastaiStatusWebhookWebhookInstanceStatusPost(requestParameters: VastaiStatusWebhookWebhookInstanceStatusPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.vastaiStatusWebhookWebhookInstanceStatusPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
