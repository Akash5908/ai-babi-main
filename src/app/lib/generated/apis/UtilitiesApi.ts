/* tslint:disable */
/* eslint-disable */
/**
 * AI Babe Public API
 * Lorem ipsum
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  SendCustomMemoracekRequest,
  SendMemoracekRequest,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    SendCustomMemoracekRequestFromJSON,
    SendCustomMemoracekRequestToJSON,
    SendMemoracekRequestFromJSON,
    SendMemoracekRequestToJSON,
} from '../models/index';

export interface SendCustomMemoracekUtilsSendMemoracekCustomPostRequest {
    sendCustomMemoracekRequest: SendCustomMemoracekRequest;
}

export interface SendMemoracekUtilsSendMemoracekPostRequest {
    sendMemoracekRequest: SendMemoracekRequest;
}

/**
 * 
 */
export class UtilitiesApi extends runtime.BaseAPI {

    /**
     * List Endpoints
     */
    async listEndpointsUtilsListEndpointsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<object>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/utils/list_endpoints/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * List Endpoints
     */
    async listEndpointsUtilsListEndpointsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<object>> {
        const response = await this.listEndpointsUtilsListEndpointsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Send Custom Memoracek
     */
    async sendCustomMemoracekUtilsSendMemoracekCustomPostRaw(requestParameters: SendCustomMemoracekUtilsSendMemoracekCustomPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['sendCustomMemoracekRequest'] == null) {
            throw new runtime.RequiredError(
                'sendCustomMemoracekRequest',
                'Required parameter "sendCustomMemoracekRequest" was null or undefined when calling sendCustomMemoracekUtilsSendMemoracekCustomPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/utils/send-memoracek/custom/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SendCustomMemoracekRequestToJSON(requestParameters['sendCustomMemoracekRequest']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Send Custom Memoracek
     */
    async sendCustomMemoracekUtilsSendMemoracekCustomPost(requestParameters: SendCustomMemoracekUtilsSendMemoracekCustomPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.sendCustomMemoracekUtilsSendMemoracekCustomPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Send Error Message
     */
    async sendErrorMessageUtilsSendErrorMessagePostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/utils/send_error_message/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Send Error Message
     */
    async sendErrorMessageUtilsSendErrorMessagePost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.sendErrorMessageUtilsSendErrorMessagePostRaw(initOverrides);
        return await response.value();
    }

    /**
     * Send Memoracek
     */
    async sendMemoracekUtilsSendMemoracekPostRaw(requestParameters: SendMemoracekUtilsSendMemoracekPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['sendMemoracekRequest'] == null) {
            throw new runtime.RequiredError(
                'sendMemoracekRequest',
                'Required parameter "sendMemoracekRequest" was null or undefined when calling sendMemoracekUtilsSendMemoracekPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/utils/send-memoracek/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SendMemoracekRequestToJSON(requestParameters['sendMemoracekRequest']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Send Memoracek
     */
    async sendMemoracekUtilsSendMemoracekPost(requestParameters: SendMemoracekUtilsSendMemoracekPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.sendMemoracekUtilsSendMemoracekPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
