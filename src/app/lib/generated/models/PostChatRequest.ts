/* tslint:disable */
/* eslint-disable */
/**
 * AI Babe Public API
 * Lorem ipsum
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostChatRequest
 */
export interface PostChatRequest {
    /**
     * 
     * @type {string}
     * @memberof PostChatRequest
     */
    query: string;
    /**
     * 
     * @type {boolean}
     * @memberof PostChatRequest
     */
    debug?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PostChatRequest
     */
    clientId: string;
    /**
     * 
     * @type {string}
     * @memberof PostChatRequest
     */
    requestId: string;
}

/**
 * Check if a given object implements the PostChatRequest interface.
 */
export function instanceOfPostChatRequest(value: object): value is PostChatRequest {
    if (!('query' in value) || value['query'] === undefined) return false;
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('requestId' in value) || value['requestId'] === undefined) return false;
    return true;
}

export function PostChatRequestFromJSON(json: any): PostChatRequest {
    return PostChatRequestFromJSONTyped(json, false);
}

export function PostChatRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostChatRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'query': json['query'],
        'debug': json['debug'] == null ? undefined : json['debug'],
        'clientId': json['client_id'],
        'requestId': json['request_id'],
    };
}

export function PostChatRequestToJSON(json: any): PostChatRequest {
    return PostChatRequestToJSONTyped(json, false);
}

export function PostChatRequestToJSONTyped(value?: PostChatRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'query': value['query'],
        'debug': value['debug'],
        'client_id': value['clientId'],
        'request_id': value['requestId'],
    };
}

