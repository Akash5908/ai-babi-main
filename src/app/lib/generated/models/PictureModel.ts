/* tslint:disable */
/* eslint-disable */
/**
 * AI Babe Public API
 * Lorem ipsum
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContentType } from './ContentType';
import {
    ContentTypeFromJSON,
    ContentTypeFromJSONTyped,
    ContentTypeToJSON,
    ContentTypeToJSONTyped,
} from './ContentType';
import type { ChatImageCategory } from './ChatImageCategory';
import {
    ChatImageCategoryFromJSON,
    ChatImageCategoryFromJSONTyped,
    ChatImageCategoryToJSON,
    ChatImageCategoryToJSONTyped,
} from './ChatImageCategory';

/**
 * 
 * @export
 * @interface PictureModel
 */
export interface PictureModel {
    /**
     * 
     * @type {Date}
     * @memberof PictureModel
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PictureModel
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PictureModel
     */
    id?: string;
    /**
     * 
     * @type {ContentType}
     * @memberof PictureModel
     */
    type: ContentType;
    /**
     * 
     * @type {ChatImageCategory}
     * @memberof PictureModel
     */
    chatCategory: ChatImageCategory | null;
    /**
     * 
     * @type {string}
     * @memberof PictureModel
     */
    postId: string | null;
    /**
     * 
     * @type {string}
     * @memberof PictureModel
     */
    galleryId: string | null;
    /**
     * 
     * @type {string}
     * @memberof PictureModel
     */
    chatbotId: string;
    /**
     * 
     * @type {string}
     * @memberof PictureModel
     */
    cloudFilename: string;
    /**
     * 
     * @type {string}
     * @memberof PictureModel
     */
    prompt: string;
    /**
     * 
     * @type {string}
     * @memberof PictureModel
     */
    description: string | null;
}



/**
 * Check if a given object implements the PictureModel interface.
 */
export function instanceOfPictureModel(value: object): value is PictureModel {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('chatCategory' in value) || value['chatCategory'] === undefined) return false;
    if (!('postId' in value) || value['postId'] === undefined) return false;
    if (!('galleryId' in value) || value['galleryId'] === undefined) return false;
    if (!('chatbotId' in value) || value['chatbotId'] === undefined) return false;
    if (!('cloudFilename' in value) || value['cloudFilename'] === undefined) return false;
    if (!('prompt' in value) || value['prompt'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function PictureModelFromJSON(json: any): PictureModel {
    return PictureModelFromJSONTyped(json, false);
}

export function PictureModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PictureModel {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'id': json['id'] == null ? undefined : json['id'],
        'type': ContentTypeFromJSON(json['type']),
        'chatCategory': ChatImageCategoryFromJSON(json['chat_category']),
        'postId': json['post_id'],
        'galleryId': json['gallery_id'],
        'chatbotId': json['chatbot_id'],
        'cloudFilename': json['cloud_filename'],
        'prompt': json['prompt'],
        'description': json['description'],
    };
}

export function PictureModelToJSON(json: any): PictureModel {
    return PictureModelToJSONTyped(json, false);
}

export function PictureModelToJSONTyped(value?: PictureModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
        'type': ContentTypeToJSON(value['type']),
        'chat_category': ChatImageCategoryToJSON(value['chatCategory']),
        'post_id': value['postId'],
        'gallery_id': value['galleryId'],
        'chatbot_id': value['chatbotId'],
        'cloud_filename': value['cloudFilename'],
        'prompt': value['prompt'],
        'description': value['description'],
    };
}

