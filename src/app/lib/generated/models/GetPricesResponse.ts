/* tslint:disable */
/* eslint-disable */
/**
 * AI Babe Public API
 * Lorem ipsum
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddonPrice } from './AddonPrice';
import {
    AddonPriceFromJSON,
    AddonPriceFromJSONTyped,
    AddonPriceToJSON,
    AddonPriceToJSONTyped,
} from './AddonPrice';
import type { SubscriptionPrice } from './SubscriptionPrice';
import {
    SubscriptionPriceFromJSON,
    SubscriptionPriceFromJSONTyped,
    SubscriptionPriceToJSON,
    SubscriptionPriceToJSONTyped,
} from './SubscriptionPrice';

/**
 * 
 * @export
 * @interface GetPricesResponse
 */
export interface GetPricesResponse {
    /**
     * 
     * @type {Array<SubscriptionPrice>}
     * @memberof GetPricesResponse
     */
    subscriptions: Array<SubscriptionPrice>;
    /**
     * 
     * @type {Array<AddonPrice>}
     * @memberof GetPricesResponse
     */
    addons: Array<AddonPrice>;
}

/**
 * Check if a given object implements the GetPricesResponse interface.
 */
export function instanceOfGetPricesResponse(value: object): value is GetPricesResponse {
    if (!('subscriptions' in value) || value['subscriptions'] === undefined) return false;
    if (!('addons' in value) || value['addons'] === undefined) return false;
    return true;
}

export function GetPricesResponseFromJSON(json: any): GetPricesResponse {
    return GetPricesResponseFromJSONTyped(json, false);
}

export function GetPricesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPricesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'subscriptions': ((json['subscriptions'] as Array<any>).map(SubscriptionPriceFromJSON)),
        'addons': ((json['addons'] as Array<any>).map(AddonPriceFromJSON)),
    };
}

export function GetPricesResponseToJSON(json: any): GetPricesResponse {
    return GetPricesResponseToJSONTyped(json, false);
}

export function GetPricesResponseToJSONTyped(value?: GetPricesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'subscriptions': ((value['subscriptions'] as Array<any>).map(SubscriptionPriceToJSON)),
        'addons': ((value['addons'] as Array<any>).map(AddonPriceToJSON)),
    };
}

