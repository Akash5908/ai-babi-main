/* tslint:disable */
/* eslint-disable */
/**
 * AI Babe Public API
 * Lorem ipsum
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PhotoStyle } from './PhotoStyle';
import {
    PhotoStyleFromJSON,
    PhotoStyleFromJSONTyped,
    PhotoStyleToJSON,
    PhotoStyleToJSONTyped,
} from './PhotoStyle';
import type { ImageGenerationQuality } from './ImageGenerationQuality';
import {
    ImageGenerationQualityFromJSON,
    ImageGenerationQualityFromJSONTyped,
    ImageGenerationQualityToJSON,
    ImageGenerationQualityToJSONTyped,
} from './ImageGenerationQuality';

/**
 * 
 * @export
 * @interface PostImagenRequest
 */
export interface PostImagenRequest {
    /**
     * 
     * @type {string}
     * @memberof PostImagenRequest
     */
    query: string;
    /**
     * 
     * @type {boolean}
     * @memberof PostImagenRequest
     */
    debug?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PostImagenRequest
     */
    clientId: string;
    /**
     * 
     * @type {string}
     * @memberof PostImagenRequest
     */
    requestId: string;
    /**
     * 
     * @type {number}
     * @memberof PostImagenRequest
     */
    numberOfImages: number;
    /**
     * 
     * @type {PhotoStyle}
     * @memberof PostImagenRequest
     */
    style: PhotoStyle;
    /**
     * 
     * @type {ImageGenerationQuality}
     * @memberof PostImagenRequest
     */
    quality?: ImageGenerationQuality;
}



/**
 * Check if a given object implements the PostImagenRequest interface.
 */
export function instanceOfPostImagenRequest(value: object): value is PostImagenRequest {
    if (!('query' in value) || value['query'] === undefined) return false;
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('requestId' in value) || value['requestId'] === undefined) return false;
    if (!('numberOfImages' in value) || value['numberOfImages'] === undefined) return false;
    if (!('style' in value) || value['style'] === undefined) return false;
    return true;
}

export function PostImagenRequestFromJSON(json: any): PostImagenRequest {
    return PostImagenRequestFromJSONTyped(json, false);
}

export function PostImagenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostImagenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'query': json['query'],
        'debug': json['debug'] == null ? undefined : json['debug'],
        'clientId': json['client_id'],
        'requestId': json['request_id'],
        'numberOfImages': json['number_of_images'],
        'style': PhotoStyleFromJSON(json['style']),
        'quality': json['quality'] == null ? undefined : ImageGenerationQualityFromJSON(json['quality']),
    };
}

export function PostImagenRequestToJSON(json: any): PostImagenRequest {
    return PostImagenRequestToJSONTyped(json, false);
}

export function PostImagenRequestToJSONTyped(value?: PostImagenRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'query': value['query'],
        'debug': value['debug'],
        'client_id': value['clientId'],
        'request_id': value['requestId'],
        'number_of_images': value['numberOfImages'],
        'style': PhotoStyleToJSON(value['style']),
        'quality': ImageGenerationQualityToJSON(value['quality']),
    };
}

