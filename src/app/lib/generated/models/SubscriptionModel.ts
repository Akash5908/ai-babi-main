/* tslint:disable */
/* eslint-disable */
/**
 * AI Babe Public API
 * Lorem ipsum
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BillingPeriod } from './BillingPeriod';
import {
    BillingPeriodFromJSON,
    BillingPeriodFromJSONTyped,
    BillingPeriodToJSON,
    BillingPeriodToJSONTyped,
} from './BillingPeriod';
import type { SubscriptionStatus } from './SubscriptionStatus';
import {
    SubscriptionStatusFromJSON,
    SubscriptionStatusFromJSONTyped,
    SubscriptionStatusToJSON,
    SubscriptionStatusToJSONTyped,
} from './SubscriptionStatus';
import type { PaymentProviderType } from './PaymentProviderType';
import {
    PaymentProviderTypeFromJSON,
    PaymentProviderTypeFromJSONTyped,
    PaymentProviderTypeToJSON,
    PaymentProviderTypeToJSONTyped,
} from './PaymentProviderType';

/**
 * 
 * @export
 * @interface SubscriptionModel
 */
export interface SubscriptionModel {
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionModel
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionModel
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionModel
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionModel
     */
    externalId: string | null;
    /**
     * 
     * @type {SubscriptionStatus}
     * @memberof SubscriptionModel
     */
    status: SubscriptionStatus;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionModel
     */
    tokens: number;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionModel
     */
    termEnd?: Date;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionModel
     */
    price?: number;
    /**
     * 
     * @type {BillingPeriod}
     * @memberof SubscriptionModel
     */
    billingPeriod?: BillingPeriod;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionModel
     */
    currency: string | null;
    /**
     * 
     * @type {PaymentProviderType}
     * @memberof SubscriptionModel
     */
    psp: PaymentProviderType | null;
}



/**
 * Check if a given object implements the SubscriptionModel interface.
 */
export function instanceOfSubscriptionModel(value: object): value is SubscriptionModel {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('externalId' in value) || value['externalId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('tokens' in value) || value['tokens'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('psp' in value) || value['psp'] === undefined) return false;
    return true;
}

export function SubscriptionModelFromJSON(json: any): SubscriptionModel {
    return SubscriptionModelFromJSONTyped(json, false);
}

export function SubscriptionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionModel {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'id': json['id'] == null ? undefined : json['id'],
        'userId': json['user_id'],
        'externalId': json['external_id'],
        'status': SubscriptionStatusFromJSON(json['status']),
        'tokens': json['tokens'],
        'termEnd': json['term_end'] == null ? undefined : (new Date(json['term_end'])),
        'price': json['price'] == null ? undefined : json['price'],
        'billingPeriod': json['billing_period'] == null ? undefined : BillingPeriodFromJSON(json['billing_period']),
        'currency': json['currency'],
        'psp': PaymentProviderTypeFromJSON(json['psp']),
    };
}

export function SubscriptionModelToJSON(json: any): SubscriptionModel {
    return SubscriptionModelToJSONTyped(json, false);
}

export function SubscriptionModelToJSONTyped(value?: SubscriptionModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
        'user_id': value['userId'],
        'external_id': value['externalId'],
        'status': SubscriptionStatusToJSON(value['status']),
        'tokens': value['tokens'],
        'term_end': value['termEnd'] == null ? undefined : ((value['termEnd']).toISOString()),
        'price': value['price'],
        'billing_period': BillingPeriodToJSON(value['billingPeriod']),
        'currency': value['currency'],
        'psp': PaymentProviderTypeToJSON(value['psp']),
    };
}

