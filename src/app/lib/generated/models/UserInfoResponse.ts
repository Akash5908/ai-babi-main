/* tslint:disable */
/* eslint-disable */
/**
 * AI Babe Public API
 * Lorem ipsum
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserRole } from './UserRole';
import {
    UserRoleFromJSON,
    UserRoleFromJSONTyped,
    UserRoleToJSON,
    UserRoleToJSONTyped,
} from './UserRole';
import type { Preferences } from './Preferences';
import {
    PreferencesFromJSON,
    PreferencesFromJSONTyped,
    PreferencesToJSON,
    PreferencesToJSONTyped,
} from './Preferences';
import type { Subscription } from './Subscription';
import {
    SubscriptionFromJSON,
    SubscriptionFromJSONTyped,
    SubscriptionToJSON,
    SubscriptionToJSONTyped,
} from './Subscription';

/**
 * 
 * @export
 * @interface UserInfoResponse
 */
export interface UserInfoResponse {
    /**
     * 
     * @type {string}
     * @memberof UserInfoResponse
     */
    userId: string;
    /**
     * 
     * @type {UserRole}
     * @memberof UserInfoResponse
     */
    role: UserRole;
    /**
     * 
     * @type {string}
     * @memberof UserInfoResponse
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfoResponse
     */
    username: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserInfoResponse
     */
    oauth: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserInfoResponse
     */
    firstLogin: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserInfoResponse
     */
    feedbackGiven: boolean;
    /**
     * 
     * @type {Subscription}
     * @memberof UserInfoResponse
     */
    subscription: Subscription;
    /**
     * 
     * @type {Preferences}
     * @memberof UserInfoResponse
     */
    preferences: Preferences;
    /**
     * 
     * @type {boolean}
     * @memberof UserInfoResponse
     */
    hasUnseenImages: boolean;
}



/**
 * Check if a given object implements the UserInfoResponse interface.
 */
export function instanceOfUserInfoResponse(value: object): value is UserInfoResponse {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('oauth' in value) || value['oauth'] === undefined) return false;
    if (!('firstLogin' in value) || value['firstLogin'] === undefined) return false;
    if (!('feedbackGiven' in value) || value['feedbackGiven'] === undefined) return false;
    if (!('subscription' in value) || value['subscription'] === undefined) return false;
    if (!('preferences' in value) || value['preferences'] === undefined) return false;
    if (!('hasUnseenImages' in value) || value['hasUnseenImages'] === undefined) return false;
    return true;
}

export function UserInfoResponseFromJSON(json: any): UserInfoResponse {
    return UserInfoResponseFromJSONTyped(json, false);
}

export function UserInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'],
        'role': UserRoleFromJSON(json['role']),
        'email': json['email'],
        'username': json['username'],
        'oauth': json['oauth'],
        'firstLogin': json['first_login'],
        'feedbackGiven': json['feedback_given'],
        'subscription': SubscriptionFromJSON(json['subscription']),
        'preferences': PreferencesFromJSON(json['preferences']),
        'hasUnseenImages': json['has_unseen_images'],
    };
}

export function UserInfoResponseToJSON(json: any): UserInfoResponse {
    return UserInfoResponseToJSONTyped(json, false);
}

export function UserInfoResponseToJSONTyped(value?: UserInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'role': UserRoleToJSON(value['role']),
        'email': value['email'],
        'username': value['username'],
        'oauth': value['oauth'],
        'first_login': value['firstLogin'],
        'feedback_given': value['feedbackGiven'],
        'subscription': SubscriptionToJSON(value['subscription']),
        'preferences': PreferencesToJSON(value['preferences']),
        'has_unseen_images': value['hasUnseenImages'],
    };
}

