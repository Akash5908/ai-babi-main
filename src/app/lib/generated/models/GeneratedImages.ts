/* tslint:disable */
/* eslint-disable */
/**
 * AI Babe Public API
 * Lorem ipsum
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageGenerationStatus } from './ImageGenerationStatus';
import {
    ImageGenerationStatusFromJSON,
    ImageGenerationStatusFromJSONTyped,
    ImageGenerationStatusToJSON,
    ImageGenerationStatusToJSONTyped,
} from './ImageGenerationStatus';

/**
 * 
 * @export
 * @interface GeneratedImages
 */
export interface GeneratedImages {
    /**
     * 
     * @type {string}
     * @memberof GeneratedImages
     */
    type: GeneratedImagesTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GeneratedImages
     */
    chatbotId: string;
    /**
     * 
     * @type {string}
     * @memberof GeneratedImages
     */
    chatbotName: string;
    /**
     * 
     * @type {string}
     * @memberof GeneratedImages
     */
    chatbotAvatar: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof GeneratedImages
     */
    urls: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof GeneratedImages
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof GeneratedImages
     */
    eta: string;
    /**
     * 
     * @type {ImageGenerationStatus}
     * @memberof GeneratedImages
     */
    status: ImageGenerationStatus;
    /**
     * 
     * @type {string}
     * @memberof GeneratedImages
     */
    generationId: string;
    /**
     * 
     * @type {boolean}
     * @memberof GeneratedImages
     */
    seenByUser: boolean;
}


/**
 * @export
 */
export const GeneratedImagesTypeEnum = {
    Liked: 'liked',
    Generated: 'generated'
} as const;
export type GeneratedImagesTypeEnum = typeof GeneratedImagesTypeEnum[keyof typeof GeneratedImagesTypeEnum];


/**
 * Check if a given object implements the GeneratedImages interface.
 */
export function instanceOfGeneratedImages(value: object): value is GeneratedImages {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('chatbotId' in value) || value['chatbotId'] === undefined) return false;
    if (!('chatbotName' in value) || value['chatbotName'] === undefined) return false;
    if (!('chatbotAvatar' in value) || value['chatbotAvatar'] === undefined) return false;
    if (!('urls' in value) || value['urls'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('eta' in value) || value['eta'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('generationId' in value) || value['generationId'] === undefined) return false;
    if (!('seenByUser' in value) || value['seenByUser'] === undefined) return false;
    return true;
}

export function GeneratedImagesFromJSON(json: any): GeneratedImages {
    return GeneratedImagesFromJSONTyped(json, false);
}

export function GeneratedImagesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneratedImages {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'chatbotId': json['chatbot_id'],
        'chatbotName': json['chatbot_name'],
        'chatbotAvatar': json['chatbot_avatar'],
        'urls': json['urls'],
        'createdAt': (new Date(json['created_at'])),
        'eta': json['eta'],
        'status': ImageGenerationStatusFromJSON(json['status']),
        'generationId': json['generation_id'],
        'seenByUser': json['seen_by_user'],
    };
}

export function GeneratedImagesToJSON(json: any): GeneratedImages {
    return GeneratedImagesToJSONTyped(json, false);
}

export function GeneratedImagesToJSONTyped(value?: GeneratedImages | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'chatbot_id': value['chatbotId'],
        'chatbot_name': value['chatbotName'],
        'chatbot_avatar': value['chatbotAvatar'],
        'urls': value['urls'],
        'created_at': ((value['createdAt']).toISOString()),
        'eta': value['eta'],
        'status': ImageGenerationStatusToJSON(value['status']),
        'generation_id': value['generationId'],
        'seen_by_user': value['seenByUser'],
    };
}

